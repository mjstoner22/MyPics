{"version":3,"sources":["src/app.js","src/auth-config.js","src/environment.js","src/main.js","src/modules/home.js","src/modules/image.js","src/modules/list.js","src/resources/index.js","src/resources/data/data-services.js","src/resources/data/galleries.js","src/resources/data/images.js","src/resources/data/users.js","C:/Users/Mandes J. Stoner/Desktop/ITM School/810/New folder/MyPics/client/src/resources/elements/flatpickr.js","src/resources/value-converters/completed.js","src/resources/value-converters/date-format.js"],"names":["App","configureRouter","config","router","addPipelineStep","map","route","moduleId","name","auth","authConfig","baseUrl","loginUrl","tokenName","authHeader","authToken","logoutRedirect","debug","testing","configure","window","regeneratorRuntime","aurelia","use","standardConfiguration","plugin","baseConfig","feature","developmentLogging","start","then","setRoot","Home","users","loginError","message","showLogin","login","email","password","sessionStorage","setItem","JSON","stringify","response","user","navigate","catch","console","log","error","showRegister","firstName","lastName","registerError","save","serverResponse","image","images","parse","getItem","showList","showForm","title","editTodoForm","showCompleted","activate","gallery","getGalleryImages","_id","logout","removeItem","createImage","imageObj","galleryId","saveImage","alert","imageId","filesToUpload","length","uploadFile","backToList","back","editImage","deleteImage","changeFiles","Array","push","files","removeFile","index","splice","List","galleries","getUserGalleries","createGallery","galleryObj","description","userId","saveGallery","editGallery","checkGallery","deleteGallery","completeGallery","completed","globalResources","DataServices","http","httpClient","BASE_URL","withBaseUrl","withDefaults","credentials","headers","withInterceptor","request","localStorage","append","method","url","status","get","fetch","json","data","post","content","body","object","put","delete","uploadFiles","Galleries","GALLERY_SERVICE","galleriesArray","id","i","Images","IMAGE_SERVICE","imagesArray","formData","FormData","forEach","item","Users","USER_SERVICE","CompletedValueConverter","toView","array","value","filter","DateFormatValueConverter","undefined","format"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {AuthorizeStep} from 'aurelia-auth';\n\nexport class App {\n    configureRouter(config, router) {\n    this.router = router;\n    config.addPipelineStep('authorize', AuthorizeStep); \n    config.map([\n      { \n\t       route: ['', 'home'],\n\t       moduleId: './modules/home',\n\t       name: 'Home' \n      },\n      {\n\t       route: 'list',\n\t       moduleId: './modules/list',\n         name: 'List',\n         auth: true \n      },\n      {\n\t       route: 'image',\n\t       moduleId: './modules/image',\n         name: 'Image',\n         auth: false \n      }\n    ]);\n  }\n\n}\n","var authConfig = {\r\n  baseUrl: \"http://localhost:5000/api\",\r\n  loginUrl: '/users/login',\r\n  tokenName: 'token',\r\n  authHeader: 'Authorization',\r\n  authToken: '',\r\n  logoutRedirect: '#/home'\r\n}\r\n\r\nexport default authConfig;\r\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\nimport config from './auth-config';\nimport regeneratorRuntime from 'regenerator-runtime';\nwindow.regeneratorRuntime = regeneratorRuntime;\n\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-auth', (baseConfig)=>{\n     baseConfig.configure(config);\n    })\n\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport { Users } from '../resources/data/users';\r\nimport {AuthService} from 'aurelia-auth';\r\n\r\n\r\n@inject(Router,Users,AuthService)\r\nexport class Home {\r\n  constructor(router,users,auth) {\r\n  this.router = router;\r\n  this.auth = auth;\r\n  this.loginError = '';\r\n  this.message = 'Home Message from Class Home';\r\n  this.showLogin = true;\r\n  this.users = users;\r\n  }\r\n\r\n   login() {\r\n    return this.auth.login(this.email, this.password)\r\n      .then(response => {\r\n\tsessionStorage.setItem(\"user\", JSON.stringify(response.user));\r\n  this.loginError = \"\";\r\n  this.router.navigate('list');\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        this.loginError = \"Invalid credentials.\";\r\n      });\r\n  };\r\n\r\n  showRegister(){\r\n      this.user = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\"\r\n      }\r\n      this.registerError = \"\";\r\n\t  this.showLogin = false;\r\n  }\r\n \r\n\r\n  async save() {\r\n      let serverResponse = await this.users.save(this.user);\r\n      if (!serverResponse.error) {\r\n        this.showLogin = true;\r\n      } else {\r\n        this.registerError = \"There was a problem registering the user.\"\r\n      }\r\n}\r\n\r\n\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {AuthService} from 'aurelia-auth';\r\nimport {Images} from '../resources/data/images';\r\n\r\n@inject(Router,Images,AuthService)\r\nexport class image {\r\n  constructor(router,images,auth) {\r\n  this.router = router;\r\n  this.images = images;\r\n  this.auth = auth;\r\n  this.message = 'Image List';\r\n  this.user = JSON.parse(sessionStorage.getItem('user'));\r\n  this.showList = true;\r\n  this.showForm = false;\r\n  this.title = \"Rafa Has Some Images!\"\r\n\tthis.editTodoForm = false;\r\n\tthis.showCompleted = false;\r\n  }\r\nasync activate(gallery){\r\n\t\tawait this.images.getGalleryImages(JSON.parse(sessionStorage.getItem('gallery'))._id);\r\n\t}\r\n\r\n   logout(){\r\n\tsessionStorage.removeItem('user');\r\n\tthis.auth.logout();\r\n   }\r\n\r\n\r\n   createImage(){\t\r\n\t\tthis.imageObj = {\r\n\t\t\tgalleryId: JSON.parse(sessionStorage.getItem('gallery'))._id\r\n\t\t\t\r\n\t\t}\r\n\t\tthis.showList = false;\r\n\t\tthis.showForm = true;\t\t\r\n   }\r\n\r\n   async saveImage(){\r\n        if(this.imageObj){       \r\n            let response = await this.images.save(this.imageObj);\r\n            if(response.error){\r\n                alert(\"There was an error creating the Image\");\r\n            } else {\r\n                var galleryId = JSON.parse(sessionStorage.getItem('gallery'))._id;\r\n                var imageId = response._id;\r\n                if(this.filesToUpload && this.filesToUpload.length){\r\n                    await this.images.uploadFile(this.filesToUpload, galleryId,imageId );\r\n                    this.filesToUpload = [];\r\n                }\r\n            }\r\n            this.showList = true;\r\n\t\t\tthis.showForm = false;\r\n        }\r\n    }\r\n\r\n\r\n\tbackToList(){\r\n\t\tthis.router.navigate('list');\r\n\t}\r\n\r\n\r\n\tback(){\r\n\t\tthis. showList = true;\r\n\t\t this.showForm = false;\r\n\t}\r\n\r\n\t  editImage(image){\r\n        this.imageObj = image;\r\n        this. showList = false;\r\n\t\tthis.showForm = true;\r\n      }\r\n\r\n   deleteImage(image){\r\n        this.images.deleteImage(image._id);\r\n    }\r\n\r\n\t changeFiles(){\r\n    \tthis.filesToUpload = new Array(); \r\n    \tthis.filesToUpload.push(this.files[0]);\r\n\t}\r\n\tremoveFile(index){\r\n    \tthis.filesToUpload.splice(index,1);\r\n\t}\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {AuthService} from 'aurelia-auth';\r\nimport {Galleries} from '../resources/data/galleries';\r\n\r\n@inject(Router,Galleries,AuthService)\r\nexport class List {\r\n  constructor(router,galleries,auth) {\r\n\t  \r\n  this.router = router;\r\n  this.galleries = galleries;\r\n  this.auth = auth;\r\n  this.message = 'Welcome to the list of galleries';\r\n  this.user = JSON.parse(sessionStorage.getItem('user'));\r\n  this.showList = true;\r\n  this.showForm = false;\r\n  this.editTodoForm = false;\r\n  this.showCompleted = false;\r\n  }\r\n\r\n  \r\nasync activate(){\r\n\t\tawait this.galleries.getUserGalleries(this.user._id);\r\n\t}\r\n\r\n   logout(){\r\n\tsessionStorage.removeItem('user');\r\n\tthis.auth.logout();\r\n   }\r\n\r\n\r\n  createGallery(){\t\r\n\t\tthis.galleryObj = {\r\n\t\t\tgallery: \"\",\r\n\t\t\tdescription: \"\",\r\n\t\t\t userId: this.user._id,\r\n\t\t}\r\n\t\tthis.showList = false;\r\n\t\tthis.showForm = true;\t\t\r\n   }\r\n  \r\n      async saveGallery(){\r\n        if(this.galleryObj){       \r\n            let response = await this.galleries.save(this.galleryObj);\r\n            if(response.error){\r\n                alert(\"There was an error creating the Gallery\");\r\n            } else {\r\n              \r\n            }\r\n            this.showList = true;\r\n\t\t\tthis.showForm = false;\r\n        }\r\n    }\r\n\r\n\r\n\t back(){\r\n\t\t this. showList = true;\r\n\t\t  this.showForm = false;\r\n\t }\r\n\t  editGallery(gallery){\r\n        this.galleryObj = gallery;\r\n        this. showList = false;\r\n\t\tthis.showForm = true;\r\n      }\r\n\r\n\t\r\n\r\n  checkGallery(gallery) {  \r\n\t  sessionStorage.setItem(\"gallery\", JSON.stringify(gallery));\r\n  \t  this.router.navigate('image');   \r\n    };\r\n\t     deleteGallery(gallery){\r\n        this.galleries.deleteGallery(gallery._id);\r\n    }\r\n\r\n\tcompleteGallery(gallery){\r\n    \tgallery.completed = !gallery.completed;\r\n    \tthis.galleryObj = gallery;\r\n    \tthis.saveGallery();\r\n\t }\r\n\t\r\n\t changeFiles(){\r\n    \tthis.filesToUpload = new Array(); \r\n    \tthis.filesToUpload.push(this.files[0]);\r\n\t}\r\n\tremoveFile(index){\r\n    \tthis.filesToUpload.splice(index,1);\r\n\t}\r\n\r\n}\r\n","export function configure(config) {\n  config.globalResources(['./value-converters/date-format']);\n  config.globalResources(['./value-converters/completed']);\n}\n","import { inject } from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\n\r\n@inject(HttpClient)\r\nexport class DataServices {\r\n\r\n\tconstructor(http) {\r\n\t\tthis.httpClient = http;\r\n        this.BASE_URL = \"http://localhost:5000/api/\";\r\n        this.httpClient.configure(config => {\r\n\t\tconfig\r\n\t\t\t.withBaseUrl(this.BASE_URL)\r\n\t\t\t.withDefaults({\r\n\t\t\tcredentials: 'same-origin',\r\n\t\t\theaders: {\r\n\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t'X-Requested-With': 'Fetch'\r\n\t\t\t}\r\n\t\t\t})\r\n\t\t\t.withInterceptor({\r\n\t\t\trequest(request) {\r\n\t\t\t\tvar authHeader = 'Bearer ' + localStorage.getItem('aurelia_token')\r\n                request.headers.append('Authorization', authHeader);\r\n\t\t\t\tconsole.log(`Requesting ${request.method} ${request.url}`);\r\n\t\t\t\treturn request;\r\n\t\t\t},\r\n\t\t\tresponse(response) {\r\n\t\t\t\tconsole.log(`Received ${response.status} ${response.url}`);\r\n\t\t\t\treturn response;\r\n\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n    }\r\n    get(url) {\r\n\t\treturn this.httpClient.fetch(url)\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\treturn data;\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\treturn error;\r\n\t\t\t});\r\n    }\r\n    post(content, url) {\r\n\t\treturn this.httpClient\r\n\t\t\t.fetch(url, {\r\n\t\t\t\tmethod: 'post',\r\n\t\t\t\tbody: json(content)\r\n\t\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(object => {\r\n\t\t\t\treturn object;\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\treturn error;\r\n\t\t\t});\r\n    }\r\n    put(content, url) {\r\n\t\treturn this.httpClient\r\n\t\t\t.fetch(url, {\r\n\t\t\t\tmethod: 'put',\r\n\t\t\t\tbody: json(content)\r\n\t\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(object => {\r\n\t\t\t\treturn object;\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\treturn error;\r\n\t\t\t});\r\n    }\r\n    delete(url) {\r\n\t\treturn this.httpClient\r\n\t\t\t.fetch(url, {\r\n\t\t\t\tmethod: 'delete'\r\n\t\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(object => {\r\n\t\t\t\treturn object;\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\treturn error ;\r\n\t\t\t});\r\n\t}\r\n\tuploadFiles(files, url){\r\n   \t\t return this.httpClient\r\n    \t.fetch(url, {\r\n        method: 'post',\r\n        body: files\r\n    })\r\n    \t.then(response => response.json())\r\n    \t.then(object => {\r\n        return object;\r\n    })\r\n    \t.catch(error => {\r\n        return error;\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {DataServices} from './data-services';\r\n\r\n@inject(DataServices)\r\nexport class Galleries {\r\n   constructor(data) {\r\n        \t\tthis.data = data;\r\n        \t\tthis.GALLERY_SERVICE = 'galleries';\r\n                this.galleriesArray = [];\r\n\r\n   \t\t }\r\n    async save(gallery){\r\n\t\tif(gallery){\r\n\t\t\tif(!gallery._id){\r\n\t\t\t\tlet serverResponse = await this.data.post(gallery, this.GALLERY_SERVICE);\r\n\t\tif(!serverResponse.error){\r\n\t\t\tthis.galleriesArray.push(serverResponse);\r\n\t\t     }\r\n\t\t           return serverResponse;\r\n\t\t }else{\r\n\t\t\t let serverResponse = await this.data.put(gallery, this.GALLERY_SERVICE + \"/\" +gallery._id);\r\n\t\t\t  return serverResponse;\r\n\t\t }\r\n}}\r\n\r\nasync getUserGalleries(id){\r\n\t\tlet response = await this.data.get(this.GALLERY_SERVICE + \"/user/\" + id);\r\n\t\tif(!response.error && !response.message){\r\n\t\t\tthis.galleriesArray = response;\r\n\t\t}\r\n\t   }\r\nasync deleteGallery(id){\r\n\t\tlet response = await this.data.delete(this.GALLERY_SERVICE + \"/\" + id);\r\n\t\tif(!response.error){\r\n\t\t\tfor(let i = 0; i < this.galleriesArray.length; i++){\r\n\t\t\t\tif(this.galleriesArray[i]._id === id){\r\n\t\t\t\t\tthis.galleriesArray.splice(i,1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n","import {inject} from 'aurelia-framework';\r\nimport {DataServices} from './data-services';\r\n\r\n@inject(DataServices)\r\nexport class Images {\r\n   constructor(data) {\r\n        \t\tthis.data = data;\r\n        \t\tthis.IMAGE_SERVICE = 'images';\r\n                this.imagesArray = [];\r\n\r\n   \t\t }\r\n    async save(image){\r\n\t\tif(image){\r\n\t\t\tif(!image._id){\r\n\t\t\t\tlet serverResponse = await this.data.post(image, this.IMAGE_SERVICE);\r\n\t\tif(!serverResponse.error){\r\n\t\t\tthis.imagesArray.push(serverResponse);\r\n\t\t     }\r\n\t\t           return serverResponse;\r\n\t\t }else{\r\n\t\t\t let serverResponse = await this.data.put(image, this.IMAGE_SERVICE + \"/\" +image._id);\r\n\t\t\t  return serverResponse;\r\n\t\t }\r\n}}\r\n\r\nasync uploadFile(files, galleryId, imageId){\r\n        let formData = new FormData();\r\n        files.forEach((item, index) => {\r\n\t    formData.append(\"file\" + index, item);\r\n        });\r\n    \r\n\tlet response = await this.data.uploadFiles(formData, this.IMAGE_SERVICE + \"/upload/\"  + galleryId + \"/\"   + imageId);\r\n\tconsole.log(\"this is being called \" + this.IMAGE_SERVICE + \"/upload/\" + galleryId + \"/\" + imageId);\r\n\treturn response;\r\n}\r\n\r\n\r\n\r\nasync getGalleryImages(id){\r\n\t\tlet response = await this.data.get(this.IMAGE_SERVICE + \"/gallery/\" + id);\r\n\t\tif(!response.error && !response.message){\r\n\t\t\tthis.imagesArray = response;\r\n\t\t}\r\n\t   }\r\nasync deleteImage(id){\r\n\t\tlet response = await this.data.delete(this.IMAGE_SERVICE + \"/\" + id);\r\n\t\tif(!response.error){\r\n\t\t\tfor(let i = 0; i < this.imagesArray.length; i++){\r\n\t\t\t\tif(this.imagesArray[i]._id === id){\r\n\t\t\t\t\tthis.imagesArray.splice(i,1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n","import {inject} from 'aurelia-framework';\r\nimport {DataServices} from './data-services';\r\n\r\n@inject(DataServices)\r\nexport class Users {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n        this.USER_SERVICE = 'users';\r\n    }\r\n\r\n    async save(user){\r\n        if(user){\r\n\t  let serverResponse = await this.data.post(user, this.USER_SERVICE);\r\n             return serverResponse;\r\n \t}\r\n    }\r\n\r\n}\r\n\r\n",null,"export class CompletedValueConverter {\r\n  \r\n   toView(array, value) {\r\n     if(!value){\r\n      return array.filter(item => {\r\n        return !item.completed;\r\n      })\r\n     } else {\r\n       return array;\r\n     }\r\n   }\r\n  }\r\n\r\n","import moment from 'moment';\r\n\r\nexport class DateFormatValueConverter {\r\n\r\ntoView(value) {\r\nif(value === undefined || value === null){\r\n\treturn;\r\n    \t\t}\r\n    \r\n    \t\treturn moment(value).format('MMM Do YYYY');\r\n\t}\r\n}\r\n\r\n"],"sourceRoot":".."}